name: Release build CI

on:
  push:
    tags: v*
  workflow_dispatch:
    branches: [ master ]

jobs:

  # see: https://github.com/actions/create-release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: true

  build-on-linux:
    name: Build on Linux
    needs: create-release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Prepare CoreDNS for dnsredir plugin
      run: |
        set -eufx
        nproc
        env
        uname -a

        DNSREDIR_DIR=$PWD
        REPO_ADDR=$(git remote get-url origin | sed -e 's/^https:\/\///' -e 's/\.git//')
        HEAD_COMMIT=$(git describe --dirty --always)
        DNSREDIR_TAG=$(curl -sL https://api.github.com/repos/leiless/dnsredir/releases/latest | grep '"tag_name":' | cut -d'"' -f4)

        mkdir bin

        mkdir -p ~/go/pkg/mod/github.com/leiless
        # Link leiless/dnsredir to latest master tree.
        ln -s $DNSREDIR_DIR ~/go/pkg/mod/github.com/leiless/dnsredir@$DNSREDIR_TAG

        COREDNS_URL=https://github.com/coredns/coredns.git
        COREDNS_DIR=$HOME/coredns
        COREDNS_TAG=$(curl -sL https://api.github.com/repos/coredns/coredns/releases/latest | grep '"tag_name":' | cut -d'"' -f4)
        git clone --branch $COREDNS_TAG --depth 1 $COREDNS_URL $COREDNS_DIR 2> /dev/null

        pushd $COREDNS_DIR
        sed -i "s|forward:forward|dnsredir:$REPO_ADDR\nforward:forward|g" plugin.cfg
        sed -i "s|GITCOMMIT:=|CUSTOM_FLAGS=-X $REPO_ADDR.pluginVersion=$DNSREDIR_TAG -X $REPO_ADDR.pluginHeadCommit=$HEAD_COMMIT\\nGITCOMMIT:=|g" Makefile
        sed -i 's|$(GITCOMMIT)|$(GITCOMMIT) $(CUSTOM_FLAGS)|g' Makefile
        go generate coredns.go
        git diff
        git status
        go get
        popd

    - name: Debug build
      env:
        GOOS: linux
        GOARCH: amd64
        # Disable code optimization
        CGO_CFLAGS: -g -O0 -DDEBUG
        CGO_CXXFLAGS: -g -O0 -DDEBUG
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make CGO_ENABLED=1 BUILDOPTS="-v -race" -j$(nproc)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH-debug
        popd

    - name: Release build
      env:
        GOOS: linux
        GOARCH: amd64
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make -j$(nproc)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH
        popd

    - name: Release build for ARM64
      env:
        GOOS: linux
        GOARCH: arm64
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make -j$(nproc)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH
        popd

    - name: Release build for Windows
      env:
        GOOS: windows
        GOARCH: amd64
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make -j$(nproc)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH
        popd

    - name: Prepare files for upload
      run: |
        set -eufx
        pushd bin
        ls -1 | xargs -I{} zip -q {}.zip {}
        ls -1 | grep "\.zip$" | xargs shasum -a 256 > shasum256.txt
        popd

    # see:
    #   https://github.com/actions/upload-release-asset
    #   htps://github.com/marketplace/actions/upload-a-release-asset
    - name: Upload coredns_dnsredir-linux-amd64-debug.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-linux-amd64-debug.zip
        asset_name: coredns_dnsredir-linux-amd64-debug.zip
        asset_content_type: application/zip

    - name: Upload coredns_dnsredir-linux-amd64.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-linux-amd64.zip
        asset_name: coredns_dnsredir-linux-amd64.zip
        asset_content_type: application/zip

    - name: Upload coredns_dnsredir-linux-arm64.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-linux-arm64.zip
        asset_name: coredns_dnsredir-linux-arm64.zip
        asset_content_type: application/zip

    - name: Upload coredns_dnsredir-windows-amd64.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-windows-amd64.zip
        asset_name: coredns_dnsredir-windows-amd64.zip
        asset_content_type: application/zip

    - name: Post build
      run: |
        set -eufx
        ls -l bin
        cat bin/shasum256.txt

  build-on-darwin:
    name: Build on Darwin
    needs: create-release
    runs-on: macos-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        #go-version: ^1.13
        go-version: ^1.16.0-rc1
        stable: false

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Prepare CoreDNS for dnsredir plugin
      run: |
        set -eufx
        sysctl -n hw.ncpu
        sw_vers
        uname -a
        env

        # [quote] GNU "sed" has been installed as "gsed".
        brew install gnu-sed

        DNSREDIR_DIR=$PWD
        REPO_ADDR=$(git remote get-url origin | sed -e 's/^https:\/\///' -e 's/\.git//')
        HEAD_COMMIT=$(git describe --dirty --always)
        DNSREDIR_TAG=$(curl -sL https://api.github.com/repos/leiless/dnsredir/releases/latest | grep '"tag_name":' | cut -d'"' -f4)

        pushd pf
        ./download-pf-headers.sh
        popd

        mkdir bin

        mkdir -p ~/go/pkg/mod/github.com/leiless
        # Link leiless/dnsredir to latest master tree.
        ln -s $DNSREDIR_DIR ~/go/pkg/mod/github.com/leiless/dnsredir@$DNSREDIR_TAG

        COREDNS_URL=https://github.com/coredns/coredns.git
        COREDNS_DIR=$HOME/coredns
        COREDNS_TAG=$(curl -sL https://api.github.com/repos/coredns/coredns/releases/latest | grep '"tag_name":' | cut -d'"' -f4)
        git clone --branch $COREDNS_TAG --depth 1 $COREDNS_URL $COREDNS_DIR 2> /dev/null

        pushd $COREDNS_DIR
        gsed -i "s|forward:forward|dnsredir:$REPO_ADDR\nforward:forward|g" plugin.cfg
        gsed -i "s|GITCOMMIT:=|CUSTOM_FLAGS=-X $REPO_ADDR.pluginVersion=$DNSREDIR_TAG -X $REPO_ADDR.pluginHeadCommit=$HEAD_COMMIT\\nGITCOMMIT:=|g" Makefile
        gsed -i 's|$(GITCOMMIT)|$(GITCOMMIT) $(CUSTOM_FLAGS)|g' Makefile
        go generate coredns.go
        git diff
        git status
        go get
        popd

    - name: Debug build
      env:
        GOOS: darwin
        GOARCH: amd64
        CGO_CFLAGS: -g -O0 -DDEBUG
        CGO_CXXFLAGS: -g -O0 -DDEBUG
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        go get
        go get github.com/coredns/coredns/core/plugin
        make CGO_ENABLED=1 BUILDOPTS="-v -race" -j$(sysctl -n hw.ncpu)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH-debug
        popd

    - name: Release build
      env:
        GOOS: darwin
        GOARCH: amd64
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make CGO_ENABLED=1 -j$(sysctl -n hw.ncpu)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH
        popd

    - name: Release build for ARM64
      env:
        GOOS: darwin
        GOARCH: arm64
      run: |
        set -eufx
        DNSREDIR_BIN=$PWD/bin
        COREDNS_DIR=$HOME/coredns
        pushd $COREDNS_DIR
        make CGO_ENABLED=1 -j$(sysctl -n hw.ncpu)
        mv coredns $DNSREDIR_BIN/coredns_dnsredir-$GOOS-$GOARCH
        popd

    - name: Prepare files for upload
      run: |
        set -eufx
        pushd bin
        ls -1 | xargs -I{} zip -q {}.zip {}
        ls -1 | grep "\.zip$" | xargs shasum -a 256 > shasum256.txt
        popd

    # see:
    #   https://github.com/actions/upload-release-asset
    #   htps://github.com/marketplace/actions/upload-a-release-asset
    - name: Upload coredns_dnsredir-darwin-amd64-debug.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-darwin-amd64-debug.zip
        asset_name: coredns_dnsredir-darwin-amd64-debug.zip
        asset_content_type: application/zip

    - name: Upload coredns_dnsredir-darwin-amd64.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-darwin-amd64.zip
        asset_name: coredns_dnsredir-darwin-amd64.zip
        asset_content_type: application/zip

    - name: Upload coredns_dnsredir-darwin-arm64.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: bin/coredns_dnsredir-darwin-arm64.zip
        asset_name: coredns_dnsredir-darwin-arm64.zip
        asset_content_type: application/zip

    - name: Post build
      run: |
        set -eufx
        ls -l bin
        cat bin/shasum256.txt
